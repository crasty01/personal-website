@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@900&display=swap');

h2,
h3 {
  font-size: 4rem;
  text-transform: uppercase;
  font-weight: 900;
  font-family: 'Montserrat', sans-serif;
  margin-bottom: 0.3em;
}

h3 {
  font-size: 2rem;
}

p {
  font-size: 1.2rem;
  max-width: 30em;
  max-width: 40em;
  font-family: 'Roboto Mono', monospace;
}

.tool {
  grid-template-columns: 1fr auto;
  justify-self: stretch;
  display: grid;
  grid-template-areas: 't i' 'f i';
  row-gap: 6rem;
  grid-template-rows: auto 1fr;
  align-content: center;
  padding-top: 4rem;

  .title p {
    //font-family: 'Roboto Mono', monospace;
    font-size: 1rem;
    max-width: 40em;
    grid-area: t;

    & a {
      color: $twitch-dark;
      font-family: inherit;
      display: inline;

      &:hover,
      &:focus {
        text-decoration: underline;
      }
    }
  }
  .fakt {
    position: relative;
    grid-area: f;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 100%;
      width: 1.2rem;
      height: 3rem;
      background-color: $white;
      background-color: $light;
      clip-path: polygon(0 0, 100% 0, 0 100%);
    }

    .fakt__content {
      background-color: $white;
      background-color: $light;
      min-height: 18rem;
      padding: 3rem 3.5rem;
      padding-right: 8.5rem;
      margin-right: auto;
      position: relative;

      .copy {
        position: absolute;
        left: 0;
        bottom: calc(100% + 0.5rem);
        height: auto;
        width: auto;
        border-radius: 0;
        display: grid;
        grid-template-columns: auto;
        grid-template-rows: auto;
        margin: 0;
        border-top-left-radius: 0.5rem;
        border-top-right-radius: 0.5rem;

        & > label {
          display: none;
          position: absolute;
          bottom: 0;
          background-color: $light;
          padding: 0.75rem;
          left: calc(100% + 1rem);
          color: $white;
          border-radius: 0.5rem;
          width: auto;
          white-space: nowrap;

          &::after {
            content: '';
            position: absolute;
            right: 100%;
            transform: translateY(-50%);
            width: 0.5rem;
            height: 1rem;
            background-color: inherit;
            top: 50%;
            clip-path: polygon(100% 0, 100% 100%, 0 50%);
          }
        }

        &:hover > label {
          display: block;
        }

        @media screen and (max-width: 800px) {
          left: auto;
          right: 0;

          & > label {
            left: auto;
            right: calc(100% + 1rem);

            &::after {
              right: auto;
              left: 100%;
              clip-path: polygon(0 0, 100% 50%, 0 100%);
            }
          }
        }
      }
    }

    @media screen and (max-width: 1000px) {
      &::before {
        display: none;
      }

      .fakt__content {
        padding: 3rem 2rem;
      }
    }

    @media screen and (max-width: 500px) {
      .fakt__content {
        padding: 3rem 1rem 2rem 1rem;
      }
    }
  }
  .imgs {
    grid-area: i;
    position: relative;
    user-select: none;

    @media screen and (max-width: 1000px) {
      display: none;
    }

    .fg {
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      width: calc(100% + 116px);
      clip-path: polygon(0 46%, 22% 36%, 87% 76%, 79% 100%, 49% 100%, 0% 62%);
    }
  }
}

.button {
  background-color: #ff2c35;
  color: $white;
  background-color: $twitch;
  user-select: none;

  &:hover,
  &:focus {
    background-color: $twitch-light;

    svg {
      animation: arrow-out 0.15s ease-in 0s 1 forwards, arrow-in 0.2s cubic-bezier(0.33, 0.33, 1, 0.66) 0.15s 1 forwards;
    }
  }

  cursor: pointer;
  font-size: 1rem;
  text-transform: uppercase;
  font-weight: 800;
  padding: 0.75rem;
  display: grid;
  grid-template-columns: 1fr 2rem;
  border-bottom-left-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
  width: 100%;
  //margin-top: 1rem;
  margin-top: 0.5rem;
  text-align: left;
  border: none;
  gap: 1rem;

  &:focus {
    outline: none;
  }

  .arrow {
    overflow: hidden;
    width: auto;
    max-width: 4rem;
    height: 100%;
    justify-self: right;
    align-self: stretch;

    svg {
      width: auto;
      max-width: 4rem;
      height: 100%;
      justify-self: right;
      align-self: stretch;
    }
  }
}
$as: 1.2rem;
@keyframes arrow-out {
  0% {
    transform: translate(0, 0);
  }

  100% {
    transform: translate($as, $as);
  }
}

@keyframes arrow-in {
  0% {
    transform: translate(-$as, -$as);
  }

  100% {
    transform: translate(0, 0);
  }
}
